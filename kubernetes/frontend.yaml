apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.service.loadBalancerIP: 35.225.182.66
    kompose.service.type: LoadBalancer
    kompose.service.updateStrategy: RollingUpdate
    kompose.version: 1.25.0 (a70f80cc)
  creationTimestamp: null
  labels:
    io.kompose.service: nodejs
  name: nodejs
  namespace: squidgames
spec:
  replicas: 2
  selector:
    matchLabels:
      io.kompose.service: nodejs
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.service.loadBalancerIP: 35.225.182.66
        kompose.service.type: LoadBalancer
        kompose.service.updateStrategy: RollingUpdate
        kompose.version: 1.25.0 (a70f80cc)
        linkerd.io/inject: enabled
      creationTimestamp: null
      labels:
        io.kompose.service: nodejs
    spec:
      containers:
        - image: mdmata/nodejs:latest
          name: nodejs
          ports:
            - containerPort: 4001
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.service.loadBalancerIP: 35.225.182.66 
    kompose.service.type: LoadBalancer
    kompose.service.updateStrategy: RollingUpdate
    kompose.version: 1.25.0 (a70f80cc)
  creationTimestamp: null
  labels:
    io.kompose.service: nodejs-tcp
  name: nodejs-tcp
  namespace: squidgames
spec:
  ports:
    - name: "4001"
      port: 4001
      targetPort: 4001
  selector:
    io.kompose.service: nodejs
  type: LoadBalancer
  loadBalancerIP: "35.225.182.66"
status:
  loadBalancer: 
    ingress:
    - ip: 35.225.182.66

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.service.type: NodePort
    kompose.service.updateStrategy: RollingUpdate
    kompose.version: 1.25.0 (a70f80cc)
  creationTimestamp: null
  labels:
    app: squitgame
  name: squitgame
  namespace: squidgames
spec:
  replicas: 1
  selector:
    matchLabels:
      app: squitgame
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.service.type: NodePort
        kompose.service.updateStrategy: RollingUpdate
        kompose.version: 1.25.0 (a70f80cc)
        linkerd.io/inject: enabled
      creationTimestamp: null
      labels:
        app: squitgame
    spec:
      containers:
        - image:  mdmata/reactweb:latest
          name: applicacion
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.service.type: NodePort
    kompose.service.updateStrategy: RollingUpdate
    kompose.version: 1.25.0 (a70f80cc)
  creationTimestamp: null
  labels:
    app: squitgame-tcp
  name: squitgame-tcp
  namespace: squidgames
spec:
  ports:
    - name: http
      port: 3000
      protocol: TCP
      targetPort: 3000
  selector:
    app: squitgame
  type: NodePort
status:
  loadBalancer: {}

---
apiVersion: networking.k8s.io/v1
kind: Ingress 
metadata: 
  name: balance-sopes
  namespace: squidgames
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: / 
    kubernetes.io/ingress.class: nginx 
    nginx.ingress.kubernetes.io/service-upstream: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
      grpc_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
spec: 
  rules: 
  - host: 34.132.196.89.nip.io
    http:
      paths:
      - path: "/"
        pathType: Prefix 
        backend: 
          service:
            name: squitgame-tcp
            port: 
              number: 3000

